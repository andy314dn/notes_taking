reference link: http://www.manolisragkousis.com/blog/2014/05/05/linux-on-zedboard/

command link: http://www.pixelbeat.org/cmdline.html
link help for makefile: https://www3.ntu.edu.sg/home/ehchua/programming/cpp/gcc_make.html


// link to read 2016-03-01
http://www.codingunit.com/
http://www.tutorialspoint.com/c_standard_library/
https://en.wikibooks.org/wiki/A_Little_C_Primer/
http://mrbook.org/blog/tutorials/make/

2016-03-02 strip command
http://www.thegeekstuff.com/2012/09/strip-command-examples/
http://www.thegeekstuff.com/2012/03/reverse-engineering-tools/
http://www.thegeekstuff.com/2010/11/strings-command-examples/

auto-make: http://www.linuxselfhelp.com/gnu/automake/html_chapter/automake_5.html

find DEFinition: http://www.pcmag.com/encyclopedia/ 

set tags in vim:
http://stackoverflow.com/questions/563616/vim-and-ctags-tips-and-tricks

Linux device driver tutorials:
1/ http://opensourceforu.efytimes.com/author/anil-kumar-pugalia/page/3/
2/ http://www.freesoftwaremagazine.com/articles/drivers_linux
3/ http://derekmolloy.ie/category/general/linux/

MAKE Documentation:
http://www.gnu.org/software/make/manual/make.html

GIT how to:
http://linux.yyz.us/git-howto.html

link tu hoc:
http://www.semiconvn.com/home/hoc-thiet-ke-vi-mach/bai-hc-vi-mch.html

sach tu hoc: he-dieu-hanh-1.1.pdf va cac slide lien quan

The Linux Kernel Module Programming Guide:
+ http://www.tldp.org/LDP/lkmpg/2.6/html/lkmpg.html

2016-03-24: toi nay ve xem automake wiki, xem slide, tap build, lay file
	anh Luong build thu

2016-04-14: find a good website https://www.cs.stevens.edu/~jschauma/631/
        the course is: advanced programming in the unix environment

2016-04-20: pg021_axi_dma.pdf
http://www.wiki.xilinx.com/DMA+Drivers+-+Soft+IPs#About%20the%20IPs--AXI%20CDMA

google for khe cam mo rong cho cac module

how is a binary executable organized?
http://jvns.ca/blog/2014/09/06/how-to-read-an-executable/

https://how-to-build-for-arm.wikispaces.com/gcc-gpp-4_8_2

http://pmc.polytechnique.fr/pagesperso/dc/arm-en.html  ////build-toolchain

WGET usage:
http://www.thegeekstuff.com/2009/09/the-ultimate-wget-download-guide-with-15-awesome-examples/
www.labnol.org/software/wget-command-examples/28750/d

difference between (USB) flash drive & SD (Secure Digital) Card:
http://blog.premiumusb.com/2011/05/differences-between-usb-flash-drive-vs-sd-card/
http://superuser.com/questions/594357/ssd-sd-emmc-raw-nand-what-are-the-differences (ATTN to bottom of the page)
http://theydiffer.com/difference-between-micro-sd-micro-sdhc-and-micro-sdxc-memory-cards/ (definitions of different types of SD cards)

image for controlling greenhouse: http://www.ictlounge.com/html/control_applications_examples.htm
sample product: http://www.lebiotek.com/products/greenhouse-climate-control/

a complete product with SW: https://agrowtek.com/component/page,shop.product_details/flypage,flypage.tpl/product_id,81/category_id,14/option,com_virtuemart/Itemid,26/

check ST Nucleo board in use: NUCLEO-F401RE
link: http://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-eval-tools/stm32-mcu-eval-tools/stm32-mcu-nucleo/nucleo-f401re.html
the processor is: STM32F401RE
link: http://www.st.com/content/st_com/en/products/microcontrollers/stm32-32-bit-arm-cortex-mcus/stm32f4-series/stm32f401/stm32f401re.html

muc tieu mua man hinh LCD: co cam ung, thich hop voi BBBC-RP3-SAM
--> nghien cuu spec cua 3 loai may tinh nay va spec cua loai man hinh minh chon

trang web hay ve dong luc hoc lap trinh: vinacode.net <-- doc thuong xuyen

infographics for history of programming language: http://blog.rackspace.com/infographic-evolution-of-computer-languages/

link to BLE: http://edx-org-utaustinx.s3.amazonaws.com/UT601x/RTOS.html

interesting understanding of network: https://www.cybertext.com/books/primerprev/chapters/ch2.htm

https://askleo.com/whats_the_difference_between_a_hub_a_switch_and_a_router/
http://ask-leo.com/what_kind_of_router_do_i_need.html
http://ask-leo.com/whats_the_difference_between_a_router_a_wireless_router_and_a_wireless_access_point.html

http://www.diffen.com/difference/Hub_vs_Switch

some books very interesting:
encyclopedia of Electronic Components vol 3
Practical Electronics for Inventors
the GNU Make Book
Valgrind 3.3 - Advanced Debugging and Profiling for Gnu/Linux Applications


20160726: What is the difference between physical storage and logical storage?
+ Physical storage involves how data is written and organized on storage media
+ Logical storage involves how OS and BIOS organize and view storaged data 

What is the difference between logical vs physical address storage?
+ A physical address is concrete and never changes. It is set in memory.
+ A logical address is made up of a base pointer and an offset. It keeps programs running
	parallel and not intertwining.

Read: TI's Wireless connectivity for the Internet of Things

useful for PROGRAMMING: https://www.ntu.edu.sg/home/ehchua/programming/index.html

Characters that are written to a stream are normally accumulated and transmitted asynchronously to the file in a block, instead of appearing as soon as they are output by the application program. Similarly, streams often retrieve input from the host environment in blocks rather than on a character-by-character basis. This is called "buffering"
There are 3 kinds of buffering strategies:
+ characters written to or read from an *unbuffered* stream are transmitted individually to or from the file as soon as possible
+ characters written to a *line buffered* stream are transmitted to the file in blocks when a newline character is encountered
+ characters written to or read from a *fully buffered* stream are transmitted to or from the file in blocks of arbitrary size

GitHub is a web-based hosting service for SW development projects that use the Git revision control system.

format specification: %[flags][width][.precision][modifier]<type>
type: d, i, x, X, u, c, s, f, d, e, E, %, g (shorter btw e and f)

why i2c:
https://learn.sparkfun.com/tutorials/i2c


